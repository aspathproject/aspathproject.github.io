(self.webpackChunkaspath_docs=self.webpackChunkaspath_docs||[]).push([[807],{9065:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>T});var r=a(6252);const o=(0,r.Wm)("h1",{id:"introduction"},[(0,r.Wm)("a",{class:"header-anchor",href:"#introduction"},"#"),(0,r.Uk)(" Introduction")],-1),s=(0,r.Wm)("p",null,"ASPATH Software has 3 key components: a VueJS-powered front-end interface, and a Python FastAPI-powered backend that communicates the interface to the PostgreSQL+TimescaleDB database.",-1),n=(0,r.Wm)("p",null,"The solution is packaged as a Docker-compose container that allows to easily deploy the whole solution in a few commands. Also, Docker volume mounting is used to make the solution run on a single folder, making it easier to backup and move between machines.",-1),l=(0,r.Wm)("h2",{id:"how-it-works"},[(0,r.Wm)("a",{class:"header-anchor",href:"#how-it-works"},"#"),(0,r.Uk)(" How It Works")],-1),i=(0,r.Uk)("The ASPATH platform front-end is a Single Page Application powered by "),d={href:"https://nuxtjs.org/",target:"_blank",rel:"noopener noreferrer"},h=(0,r.Uk)("NuxtJS"),u=(0,r.Uk)(" along "),m={href:"https://vuetifyjs.com/",target:"_blank",rel:"noopener noreferrer"},c=(0,r.Uk)("Vuetify"),p=(0,r.Uk)(" UI library that provides Material Design ready to use components."),f=(0,r.Wm)("p",null,"The platform itself won't have any data when it's deployed, so an initial configuration of data sources must be done in order to make the database grow.",-1),b=(0,r.Wm)("h3",{id:"grabbers"},[(0,r.Wm)("a",{class:"header-anchor",href:"#grabbers"},"#"),(0,r.Uk)(" Grabbers")],-1),g=(0,r.Uk)("These back-end modules will be in charge of running scheduled jobs to obtain raw datasets from external systems, such as your own route-collectors or also third party datasets, such as "),w={href:"https://www.pch.net/resources/Routing_Data/IPv4_daily_snapshots/",target:"_blank",rel:"noopener noreferrer"},k=(0,r.Uk)("PCH Daily Routing Snapshots"),y=(0,r.Uk)("."),W=(0,r.Wm)("p",null,"Grabber modules will perform the data extraction from the data provider and it will finish it's job when the raw dataset is stored as-is on the Database.",-1),v=(0,r.Wm)("h3",{id:"parsers"},[(0,r.Wm)("a",{class:"header-anchor",href:"#parsers"},"#"),(0,r.Uk)(" Parsers")],-1),U=(0,r.Wm)("p",null,"After grabber modules add raw datasets to the database, the parser modules will be able to load the file into memory and analyze it to extract the final routing data.",-1),P=(0,r.Wm)("p",null,"Parser logic is totally separated from both Grabber and Ingester modules to allow maximum flexibility in the process. Currently, the final output of parser modules consist on a simple comma-delimited string array containing forwarding table information such as route CIDR and AS_PATH attributes.",-1),A=(0,r.Wm)("h3",{id:"ingestion"},[(0,r.Wm)("a",{class:"header-anchor",href:"#ingestion"},"#"),(0,r.Uk)(" Ingestion")],-1),I=(0,r.Wm)("p",null,"The data ingestion process will finally take place when the parser modules successfully detects the routing information from the raw dataset. This module will convert the previously mentioned comma-delimited string format into an SQL payload that will go to the database.",-1),S=(0,r.Wm)("p",null,"Finally, the platform will mark the datasets and routing snapshots as available for visualization once all routes are inserted successfully into the database.",-1),T={render:function(e,t){const a=(0,r.up)("OutboundLink");return(0,r.wg)(),(0,r.j4)(r.HY,null,[o,s,n,l,(0,r.Wm)("p",null,[i,(0,r.Wm)("a",d,[h,(0,r.Wm)(a)]),u,(0,r.Wm)("a",m,[c,(0,r.Wm)(a)]),p]),f,b,(0,r.Wm)("p",null,[g,(0,r.Wm)("a",w,[k,(0,r.Wm)(a)]),y]),W,v,U,P,A,I,S],64)}}},6678:(e,t,a)=>{"use strict";a.r(t),a.d(t,{data:()=>r});const r={key:"v-fffb8e28",path:"/guide/",title:"Introduction",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"How It Works",slug:"how-it-works",children:[{level:3,title:"Grabbers",slug:"grabbers",children:[]},{level:3,title:"Parsers",slug:"parsers",children:[]},{level:3,title:"Ingestion",slug:"ingestion",children:[]}]}],filePathRelative:"guide/README.md",git:{updatedTime:1621649683e3,contributors:[]}}}}]);